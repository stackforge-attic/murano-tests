Namespaces:
  =: io.murano.apps.PostgreSql
  std: io.murano
  res: io.murano.resources


Name: PostgreSql

Extends: std:Application

Properties:
  name:
    Contract: $.string().notNull()

  instance:
    Contract: $.class(res:Instance).notNull()

  username:
    Contract: $.string().notNull()

  password:
    Contract: $.string().notNull()

  database:
    Contract: $.string().notNull()

Workflow:
  deploy:
    Body:
      - $.instance.deploy()
      - $resources: new('io.murano.system.Resources')
      # Deploy PostgreSql
      - $template: $resources.yaml('DeployPostgreSql.template')
      - $.instance.agent.call($template, $resources)
      # Configure Database on PostgreSQL
      - $template: $resources.yaml('ConfigurePostgreSqlDatabase.template').bind(dict(
            database => $.database,
            username => $.username,
            password => $.password
          ))
      - $.instance.agent.call($template, $resources)

  getIp:
    Body:
      - $resources: new('io.murano.system.Resources')
      - $template: $resources.yaml('GetIP.template')
      - $.instance.agent.call($template, $resources)
